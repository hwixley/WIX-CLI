#!/bin/bash

. "${WYX_DIR}/src/classes/sys/sys.class"
sys sys

csv_dir="${WYX_DIR}/src/data"

lib.csv.query(){
    if [ ! -f "${csv_dir}/$1.csv" ]; then
        sys.log.error "File not found: ${csv_dir}/$1.csv"
        return 1
    fi
    csvsql --query "select $2 from $1 $3" "${csv_dir}/$1.csv"
}

lib.csv.query.one(){
    lines=($(lib.csv.query "$1" "$2" "$3"))
    echo "${lines[1]}"
}

lib.csv.all(){
    coloured=$(if [ "$1" = "coloured" ]; then return 0; else return 1; fi)

    IFS=$'\n' categories=($(lib.csv.query "arg_categories" "id"))
    for category in "${categories[@]:1}"; do
        if [ "$category" = "" ]; then
            continue
        fi
        IFS=$'\n' scripts=($(lib.csv.query "arg_scripts" "id" "where category_id='$category'"))
        if [ "${scripts[1]}" = "" ]; then
            continue
        fi
        cat=($(lib.csv.query 'arg_categories' 'name' "where id='$category'"))
        sys.log.h1 "${cat[1]}:"
        for script in "${scripts[@]:1}"; do
            if [ "$script" = "" ]; then
                continue
            fi
            name=($(lib.csv.query 'arg_scripts' 'name' "where id='$script'"))
            echo "- $script: ${ORANGE}${name[1]}${RESET}"
        done
        echo ""
    done
}

lib.csv.scripts.name(){
    lib.csv.query.one "arg_scripts" "name" "where id='$1'"
}

lib.csv.scripts.path(){
    lib.csv.query.one "arg_scripts" "path" "where id='$1'"
}

lib.csv.scripts.public(){
    lib.csv.query.one "arg_scripts" "public" "where id='$1'"
}

lib.csv.scripts.args(){
    lib.csv.query.one "arg_scripts" "args" "where id='$1'"
}

lib.csv.categories.name(){
    lib.csv.query.one "arg_categories" "name" "where id='$1'"
}